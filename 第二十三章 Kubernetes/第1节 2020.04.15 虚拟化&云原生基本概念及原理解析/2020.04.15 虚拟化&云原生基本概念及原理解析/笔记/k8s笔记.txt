今日课程主题：
1、认识kubernetes (k8s) 在企业中应用场景？ ----- 为什么要学习K8s??
2、云技术（云计算平台） --- 虚拟化及虚拟化基本概念及原理
3、云技术（云计算平台） --- 容器技术及容器技术基本概念及原理
4、云原生 --- 云计算、私有云、公有云、混合云
5、容器管理技术 --- 容器编排技术
6、容器编排技术 --- kubernetes 基本架构、组件及组件原理。

前提：基本认识： k8s 偏向运维技术 ，后端程序员为什么要学习k8s??
	1、以前项目开发：开发，运维是密不可分 --- 上线 运维，开发密不可分
	2、开发&运维 结合更紧密 --- DevOps --- 流水线生产方式
公司对程序员要求：
	高级程序员（研发公司）：
	1、应用发布 （linux） --- CI/CD --- k8s 
	2、运维
	3、线上故障排查能力
	技术主管：
	运维能力（熟练）
	技术专家：
	运维能力（精通）
未来展望：
	1、所有的项目都是流水线生产方式 ---- 降本增效
	2、所有的项目都是容器化方式进行部署 --- 迁移，充分利用服务器资源
	3、k8s对项目开发架构有影响，是的对项目架构有新的一些思考--serverless

技术方向：容器编排技术非常火，成为当下项目开发流水线生产一个技术标准。（程序员必须了解，认识，精通）

普及程度：
	1、一线城市很多公司都已经普及，构建了自己公司私有云环境。（阿里云，网易云...）
	2、还有很多公司没有普及：k8s非常难，学习曲线非常陡峭..

=================================================课程内容==========================================================

1、认识kubernetes (k8s) 在企业中应用场景？ ----- 为什么要学习K8s??
	* 创业型公司，中小型企业，使用k8s构建一套自动化运维平台（自动维护服务数量，保持服务永远和预期的数据保持一致性，让服务可以永远提供服务）
	  ----- 降本增效 
	  ----- 私有云 
	  ----- 公有云（阿里云、腾讯云、网易云...）
	* 互联网企业，有很多服务器资源（物理机），为了充分利用服务器资源，使用k8s构建私有云环境，项目运行在云。
	* 项目开发中，产品需求不停的迭代，更新（产品）--- 意味着项目不停的发布新的版本 --- k8s可以实现项目从
	  开发到生产无缝迁移。
    以上3点： 可以大大为公司节省开发，上线整个成本，降本增效

2、云技术（云计算平台） --- 虚拟化及虚拟化基本概念及原理
	* 什么是虚拟化技术？？？
		* 虚拟化（英语：Virtualization）是一种资源管理技术，就是用来把物理资源（服务器，网络，硬件，CPU）
		进行隔离（分离）的一种技术。打破了物理资源不可分割障碍。
	* 虚拟化技术作用？
		* 对高性能物理计算机的资源进行充分利用
		* 对老旧硬件资源重组后再充分利用
	* 虚拟化分类
		* 全虚拟化架构 --- 在硬件上面-os,os内部可以安装多个操作系统，达到物理资源隔离
		* OS层虚拟化架构 --- 在os系统内部，可以复制多个os系统，达到资源隔离目的
		* 硬件层虚拟化 --- 直接在硬件上安装多个操作系统，达到物理资源隔离目的
		注意：资源隔离实际上使用的调度程序，把这些资源调度分配给os,这个调度程序hypervisor
3、虚拟化技术---（云计算平台）
	* 目前你认为有几种方式构建云计算平台？？？
		* 物理机构建云计算机平台（机房建设，硬件选择，网络建设，环境维护...）
		* 虚拟化技术构建云计算平台
	* OpenStack：
		* 开源管理项目 OpenStack是一个旨在为公共及私有云的建设与管理提供软件的开源项目.
		* 美国国家航天局 & RackSpace 开发 ，开源
		作用： 提供云平台的基础设施服务，让云平台管理，架构变得更简单。
	* KVM(Kernel-based Virtual Machine)基于linux内核的虚拟机
		* KVM 虚拟机技术，已经融入到linux内核。
	* VMWare
		* VMWare (Virtual Machine ware)是一个“虚拟PC”虚拟机管理管理软件
4、云技术（云计算平台） --- 容器技术及容器技术基本概念及原理
	* 有了虚拟化技术，为什么还需要使用容器化技术构建云计算平台？？
		* KVM虚拟化在同等CPU,内存，IO，网络，运行相同服务，占用资源非常大。
		* 容器化技术 就是非常轻量级资源隔离技术,容器化镜像小道几KB,达到几百M,隔离性没有虚拟机彻底
	* 容器化技术发展
		* 1979年的UNIX Chroot ，根据目录来进行隔离。
		* FreeBSD Jails ，给目录分配一个网络地址，可以对目录进行隔离。
		* Solaris Zone ，已经实现了隔离，每一个空间都有独立存储，网络，防火墙.
		* LXC指代的是Linux Containers,通过Cgroups以及Linux Namespaces实现资源隔离。
		* Docker利用LXC实现了一套容器化技术完整一套方案，容器化就是利用Cgroups以及Linux Namespaces实现资源隔离。
		总结： 容器就是运行在操作系统中的一个进程，利用Cgroups+namepspace实现进程间隔离。
	* docker原理
		* docker底层利用 cgroup + nampspace 实现资源隔离
		* docker创建procces容器进程，必须依赖磁盘镜像。（原始容器都是依赖centos镜像）
	* OpenStack&KVM&docker
		* openstack 主要用于云计算平台管理，同时提供一些基础设施一些管理服务。
		* KVM 虚拟化技术 --- 可以利用虚拟化技术构建云计算平台
		* docker 和 openstack 可以形成优势互补。
			docker是一个非常轻量级的容器技术，使用容器技术构建云平台，充分利用服务资源，性能非常高
			OpenStack可以管理基础设置服务。基础设施服务构建交给openstack
结语： 
	* 虚拟化技术 --- 资源隔离
	* 容器化技术 --- 资源隔离
	* openstack & docker & kvm
=======================================================kubernetes=====================================================
1、云架构 ---- 软件开发思想
	* iaas
	* paas
	* caas
	* saas
	* faas,baas
	* service mesh
	* serverless
	一次思维升华，下一个风口。
2、k8s